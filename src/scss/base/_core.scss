@use "../variables" as variables;
@use "../mixins" as mixins;

body {
	font-family: variables.$font-family-serif;
	font-size: variables.$font-size-base;
	line-height: 1.6;
	color: var(--text);

	background-color: var(--background);

	accent-color: var(--primary);
}

/* General display improvements */

video,
audio,
picture,
img,
iframe,
object {
	display: block;
	max-width: 100%;
}

p,
ul,
ol,
table,
video,
audio,
picture,
img,
iframe,
object,
blockquote,
address,
details,
figure,
form,
pre {
	margin-bottom: 1rem;
}

/* Border unification */

hr,
fieldset,
iframe,
select,
textarea,
input[type="date"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {
	border: 1px solid var(--text-muted-high);
	border-radius: variables.$border-radius;
}

/* Text */

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol {
	margin-top: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: variables.$font-family-sans;
	font-weight: 700;
	line-height: 1.2;
	margin-bottom: 0.5rem;

	> a {
		text-decoration-thickness: 0.1em;
		text-underline-offset: 0.15em;
	}
}

h1 {
	font-size: 2.75rem;
	// margin-top: 2.5rem; // h1 tend to be in places we do not want margin to the top
}

h2 {
	font-size: 2.25rem;
	margin-top: 2rem;
}

h3 {
	font-size: 1.75rem;
	margin-top: 1.5rem;
}

h4 {
	font-size: 1.375rem;
	margin-top: 1.125rem;
}

h5 {
	font-size: 1.125rem;
	margin-top: 0.875rem;
}

h6 {
	font-size: 1rem;
	margin-top: 0.75rem;
}

ol,
ul {
	padding-left: 2rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
	margin-bottom: 0;
}

a {
	font-weight: 700;
	@include mixins.transition(color);
	text-decoration: underline;
	color: var(--primary);

	&:hover,
	&:focus,
	&.active {
		color: var(--primary-contrast-alt);
	}

	&:focus {
		outline: 1px solid var(--primary-contrast-alt);
	}

	code,
	kbd,
	samp {
		// Reset to match link styling, as that is more important semantically
		padding: 0;
		color: inherit;
		background-color: inherit;
	}
}

mark {
	color: var(--black);
	background-color: var(--yellow);
}

blockquote {
	margin-top: 0;
	margin-right: 2rem;
	margin-left: 2rem;
}

dd {
	margin-left: 2rem;
}

pre {
	overflow: auto;

	margin-top: 0;
	padding: 0.5rem 0.75rem;
}

code,
kbd,
samp {
	color: var(--text);
	background-color: var(--background-contrast);
}

code,
kbd,
samp,
mark {
	padding: 0 0.15em;
}

/* Table changes */

table {
	border-collapse: collapse;
}

td,
th {
	padding: 0.5rem;
	border: 1px solid var(--text-muted-high);
}

/* Misc element changes */

figure {
	margin-top: 0;
	margin-right: 0;
	margin-left: 0;
}

fieldset {
	margin: 0 0.5rem 0.5rem;
	padding: 0.5rem 0.75rem;
}

hr {
	margin-top: 0.75rem;
	margin-bottom: 0.75rem;
}

// Based on https://github.com/twbs/bootstrap/blob/51535cd95ac8eb5746e19c057aeabdbcafef3a8b/scss/mixins/_visually-hidden.scss
//
// Hide content visually while keeping it accessible to assistive technologies
//
// See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
// See: https://kittygiraudel.com/2016/10/13/css-hide-and-seek/
.sr-only {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}
